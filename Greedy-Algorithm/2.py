'''
# 1이 될 때까지 문제
- 어떠한 수 N이 1이 될 때까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 합니다.
- 단, 두번째 연산은 N이 K로 나누어 떨어질 때만 선택할 수 있음
   - N에서 1을 뺀다.
   - N을 K로 나눈다
- 예를 들어, N=17, K=4
- N-1 -> 16 N//4 -> 4 N//4 -> 1
'''

'''
## 문제조건
- 난이도 하
- 풀이시간 15분
- 시간제한 2초
- 메모리 제한 128MB
입력조건: 첫째 줄에 N(1<=N<=100,000)과 K(2<=K<=100,000)가 공백을 기준으로 하여 각각 자연수로 주어짐
출력조건: 첫째 줄에 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 횟수의 최솟값을 출력
'''
N, K = input("N과 K는?").split() # 문제: int가 아니여서 계산이 안됨
cnt = 0
if N % 4 == 0: 
   N = N // 4
   cnt += 1
else:
   N = N - 1
   cnt += 1
print(cnt)
# if else만으로는 반복이 되지않고 한번만 돌아감

'''
# 문제 해결 아이디어
주어진 N에 대하여 최대한 많이 나누기를 수행
N의 값을 줄일때 2이상의 수로 나누는걸 우선 해봄 -> 안되면 -1
- 가능한 최대한 많이 나누는 작업 : 최적의 해
'''
n, k = map(int, input().split())
result = 0
while True:
   # 1을 빼주는 의미로 하는 것이 아닌
   # target을 먼저 찾는다 (계산을 통해)
   target = (n//k) * k
   result += (n-target)
   n = target
   if n <k:
      break
   result += 1
   n //=k
result += (n-1)
print(result)
